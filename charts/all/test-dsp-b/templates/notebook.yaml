# apiVersion: kubeflow.org/v1
# kind: Notebook
# metadata:
#   annotations:
#     notebooks.opendatahub.io/inject-oauth: "true"
#     notebooks.opendatahub.io/last-image-selection: s2i-minimal-notebook:2024.1
#     notebooks.opendatahub.io/last-size-selection: Small
#     notebooks.opendatahub.io/oauth-logout-url: https://rhods-dashboard-redhat-ods-applications.apps.cluster-vwmdn.dynamic.redhatworkshops.io/projects/test2?notebookLogout=test
#     opendatahub.io/accelerator-name: ""
#     opendatahub.io/image-display-name: Minimal Python
#     openshift.io/description: "{{ .Values.dsp.name }}-workbench description"
#     openshift.io/display-name: {{ .Values.dsp.name }}-workbench
#   generation: 1
#   labels:
#     app: test
#     opendatahub.io/dashboard: "true"
#     opendatahub.io/odh-managed: "true"
#   name: "{{ .Values.dsp.name }}-workbench"
#   namespace: {{ .Values.dsp.name }}
# spec:
#   template:
#     spec:
#       affinity: {}
#       containers:
#       - env:
#         - name: NOTEBOOK_ARGS
#           value: |-
#             --ServerApp.port=8888
#                               --ServerApp.token=''
#                               --ServerApp.password=''
#                               --ServerApp.base_url=/notebook/test2/test
#                               --ServerApp.quit_button=False
#                               --ServerApp.tornado_settings={"user":"admin","hub_host":"https://rhods-dashboard-redhat-ods-applications.apps.cluster-vwmdn.dynamic.redhatworkshops.io","hub_prefix":"/projects/test2"}
#         - name: JUPYTER_IMAGE
#           value: image-registry.openshift-image-registry.svc:5000/redhat-ods-applications/s2i-minimal-notebook:2024.1
#         - name: SSL_CERT_FILE
#           value: /etc/pki/tls/custom-certs/ca-bundle.crt
#         - name: PIPELINES_SSL_SA_CERTS
#           value: /etc/pki/tls/custom-certs/ca-bundle.crt
#         - name: PIP_CERT
#           value: /etc/pki/tls/custom-certs/ca-bundle.crt
#         - name: REQUESTS_CA_BUNDLE
#           value: /etc/pki/tls/custom-certs/ca-bundle.crt
#         envFrom:
#         - secretRef:
#             name: aws-connection-test
#         image: image-registry.openshift-image-registry.svc:5000/redhat-ods-applications/s2i-minimal-notebook:2024.1
#         imagePullPolicy: Always
#         livenessProbe:
#           failureThreshold: 3
#           httpGet:
#             path: /notebook/test2/test/api
#             port: notebook-port
#             scheme: HTTP
#           initialDelaySeconds: 10
#           periodSeconds: 5
#           successThreshold: 1
#           timeoutSeconds: 1
#         name: test
#         ports:
#         - containerPort: 8888
#           name: notebook-port
#           protocol: TCP
#         readinessProbe:
#           failureThreshold: 3
#           httpGet:
#             path: /notebook/test2/test/api
#             port: notebook-port
#             scheme: HTTP
#           initialDelaySeconds: 10
#           periodSeconds: 5
#           successThreshold: 1
#           timeoutSeconds: 1
#         resources:
#           limits:
#             cpu: "2"
#             memory: 8Gi
#           requests:
#             cpu: "1"
#             memory: 8Gi
#         volumeMounts:
#         - mountPath: /opt/app-root/src
#           name: test
#         - mountPath: /dev/shm
#           name: shm
#         - mountPath: /etc/pki/tls/custom-certs/ca-bundle.crt
#           name: trusted-ca
#           readOnly: true
#           subPath: ca-bundle.crt
#         workingDir: /opt/app-root/src
#       - args:
#         - --provider=openshift
#         - --https-address=:8443
#         - --http-address=
#         - --openshift-service-account=test
#         - --cookie-secret-file=/etc/oauth/config/cookie_secret
#         - --cookie-expire=24h0m0s
#         - --tls-cert=/etc/tls/private/tls.crt
#         - --tls-key=/etc/tls/private/tls.key
#         - --upstream=http://localhost:8888
#         - --upstream-ca=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
#         - --email-domain=*
#         - --skip-provider-button
#         - --openshift-sar={"verb":"get","resource":"notebooks","resourceAPIGroup":"kubeflow.org","resourceName":"test","namespace":"$(NAMESPACE)"}
#         - --logout-url=https://rhods-dashboard-redhat-ods-applications.apps.cluster-vwmdn.dynamic.redhatworkshops.io/projects/test2?notebookLogout=test
#         env:
#         - name: NAMESPACE
#           valueFrom:
#             fieldRef:
#               fieldPath: metadata.namespace
#         image: registry.redhat.io/openshift4/ose-oauth-proxy@sha256:4bef31eb993feb6f1096b51b4876c65a6fb1f4401fee97fa4f4542b6b7c9bc46
#         imagePullPolicy: Always
#         livenessProbe:
#           failureThreshold: 3
#           httpGet:
#             path: /oauth/healthz
#             port: oauth-proxy
#             scheme: HTTPS
#           initialDelaySeconds: 30
#           periodSeconds: 5
#           successThreshold: 1
#           timeoutSeconds: 1
#         name: oauth-proxy
#         ports:
#         - containerPort: 8443
#           name: oauth-proxy
#           protocol: TCP
#         readinessProbe:
#           failureThreshold: 3
#           httpGet:
#             path: /oauth/healthz
#             port: oauth-proxy
#             scheme: HTTPS
#           initialDelaySeconds: 5
#           periodSeconds: 5
#           successThreshold: 1
#           timeoutSeconds: 1
#         resources:
#           limits:
#             cpu: 100m
#             memory: 64Mi
#           requests:
#             cpu: 100m
#             memory: 64Mi
#         volumeMounts:
#         - mountPath: /etc/oauth/config
#           name: oauth-config
#         - mountPath: /etc/tls/private
#           name: tls-certificates
#       enableServiceLinks: false
#       serviceAccountName: test
#       volumes:
#       - name: test
#         persistentVolumeClaim:
#           claimName: test
#       - emptyDir:
#           medium: Memory
#         name: shm
#       - configMap:
#           items:
#           - key: ca-bundle.crt
#             path: ca-bundle.crt
#           name: workbench-trusted-ca-bundle
#           optional: true
#         name: trusted-ca
#       - name: oauth-config
#         secret:
#           defaultMode: 420
#           secretName: test-oauth-config
#       - name: tls-certificates
#         secret:
#           defaultMode: 420
#           secretName: test-tls